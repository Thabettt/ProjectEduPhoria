@model IEnumerable<MainApp.Models.Admin>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmailNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailNavigation.Email)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.AdminId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.AdminId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.AdminId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@if (SignInManager.IsSignedIn(User))
{
    <p>User is signed in.</p>
    @if (User.IsInRole("Admin"))
    {
        <p>User is in Admin role.</p>
        <div class="manage-menu">
            <h3>Manage</h3>
            <ul>
                <li><a href="@Url.Action("ViewInstructors", "Admins")">View Instructors</a></li>
                <li><a href="@Url.Action("ViewLearners", "Admins")">View Learners</a></li>
            </ul>
        </div>
    }
    else
    {
        <p>User is not in Admin role.</p>
    }
}
else
{
    <p>User is not signed in.</p>
}